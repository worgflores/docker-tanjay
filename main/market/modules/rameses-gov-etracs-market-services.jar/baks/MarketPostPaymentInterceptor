import com.rameses.annotations.*;
import com.rameses.util.*;



/******************************************************************************************************************
* why are we putting this here instead of CashReceiptService? bec. there are payments that are not necessarily
* thru cash receipts like capture payment. etc.
******************************************************************************************************************/
class MarketPostPaymentInterceptor {
	
	@DataContext("market_account")
	def acctEm;


	@After(pattern="PostPaymentService.post", eval="#{args[0]._schemaname == 'market_payment'}")
	public void postMarketPayment(def evt) {
		def res = evt.result;

		def itemGrp = res.items.findAll{ it.txntype == 'MARKETRENTAL' }.groupBy{ it.acctid };
		itemGrp.each { k,v->
			def ratetype = acctEm.find([ objid: k ]).select('ratetype').first()?.ratetype; 
			def lastItem = v.max{ (it.year *12)+it.month };
			def partialbalance = lastItem.partialunpaid;

			int yr = lastItem.year;
			int mon = lastItem.month;
			int day = lastItem.today;
			
			def todate = lastItem.todate;
			if ( ratetype == 'MONTH' &&  partialbalance > 0 ) { 
				def df = new java.text.SimpleDateFormat("yyyy-MM-dd");
				def pardate = df.parse( yr + "-" + mon + "-01");
				todate = DateUtil.add( pardate, '-1d' ); 

			} else if( ratetype == 'DAY' &&  partialbalance > 0) {
				todate = DateUtil.add( lastItem.todate, '-1d' );
			}
			
			if(todate!=null) {
				def dfact = new DateBean(todate);
				yr = dfact.year;
				mon = dfact.month;
				day = dfact.day;
			}
			acctEm.find( [objid: k] ).update(  [lastyearpaid:yr, lastmonthpaid:mon, lastdaypaid:day, partialbalance: partialbalance ] ); 
		}
	}


}