import com.rameses.annotations.*;

import com.rameses.util.*;
import treasury.utils.*;
import treasury.facts.*;
import ovs.facts.*;

class OVSCashReceiptService {

    @DataContext("ovs_violation_ticket_entry")
    def entries;

    @Service("AssessmentRuleService")
    def assmtSvc;

    @ProxyMethod
    public def getUnpaidViolations(def o){
        def pp = ["parent.violator.objid":o.objid];
        entries.select("refid:{objid},parent.ticketno,parentid,violation.title,violationid,violationcount,balance,account.objid");
        def list = entries.find(pp).where("amount - amtpaid > 0").orderBy("parent.dtcreated").list();
        if(!list) throw new Exception("There are no unpaid violations for this payer.");

        def itemLookup = new ItemAccountUtil();

        def items = [];
        int i = 0;
        list.each {
            def m = [:];
            m.violation = it.violationid;
            m.ticketid = it.parentid;
            m.refid = it.refid; 
            m.remarks = "${it.violation.title} ( ${NumberUtil.formatOrdinal( it.violationcount )} offense ) Ref.${it.parent.ticketno}".toString();                    
            m.paypriority = (i++);
            m.amount = it.balance;
            m.balance = it.balance;
            m.item = itemLookup.lookup( it.account.objid );
            m.checked = true;
            items << m;
        }
        return items;
    }

}